<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.lecloud</groupId>
	<artifactId>springbootlearn</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!--Maven 3支持Maven项目的多模块（multi-modules）结构。这样的Maven项目也被称为聚合项目，通常由一个父模块和若干个子模块构成。-->
	<!--其中，父模块必须以pom打包类型，同时以<modules>给出所有的子模块。-->
	<packaging>pom</packaging>
	<name>springbootlearn</name>
	<description>the parrent module of the project</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath/>
	</parent>

	<modules>
		<module>api</module>
		<module>service</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
<!--使用该Starter后，会自动使用在properties文件中定义的DataSource创建SqlSessionFactoryBean、SqlSessionTemplate。-->
<!--根据mybatis.mapper-locations，mybatis.type-aliases-package指定的xml位置和PO类所在的包自动扫描Mappers，-->
<!--连接到SqlSessionTemplate，并注册到Spring上下文中。-->
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.38</version>
		</dependency>

		<dependency>
			<!--@Data-->
			<!--@NoArgsConstructor-->
			<!--@AllArgsConstructor-->
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.16</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.2</version>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jool</artifactId>
			<version>0.9.12</version>
		</dependency>
		<dependency>
			<groupId>com.lecloud.commons</groupId>
			<artifactId>commons-rest-response</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<!--最终打包的名字-->
	<build>
		<finalName>spring-boot-learn</finalName>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<profileActive>dev</profileActive>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>letv.public</id>
			<name>Letv.com Repository</name>
			<url>http://maven.letv.cn/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>letv-nexus-snapshots</id>
			<name>letv-nexus-snapshots</name>
			<url>http://maven.letv.cn/nexus/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<id>letv-nexus-releases</id>
			<name>letv-nexus-releases</name>
			<url>http://maven.letv.cn/nexus/content/repositories/releases</url>
		</repository>
	</repositories>

</project>
